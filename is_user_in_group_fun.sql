FUNCTION IS_USER_IN_GROUP_FUN(
    P_AUTHORIZATION IN APEX_PLUGIN.T_AUTHORIZATION,
    P_PLUGIN        IN APEX_PLUGIN.T_PLUGIN )
  RETURN APEX_PLUGIN.T_AUTHORIZATION_EXEC_RESULT
IS
  -- Internal use variables
  L_SESSION DBMS_LDAP.SESSION;                         -- Session variable
  L_USER_HD DBMS_LDAP_UTL.HANDLE;                      -- User handle
  L_GROUP_HD DBMS_LDAP_UTL.HANDLE;                     -- Group handle
  L_RETVAL PLS_INTEGER;                                -- Return value used frequently
  L_USER_DN  VARCHAR2(100);                            -- User's DN
  L_GROUP_DN VARCHAR2(100);                            -- Group's DN
  L_RES DBMS_LDAP.MESSAGE;                             -- LDAP search result(s)
  L_ATTR DBMS_LDAP.STRING_COLLECTION;                  -- Attributes to return
  L_USERNAME  VARCHAR2(30) := P_AUTHORIZATION.USERNAME; -- Current user
  L_IS_MEMBER BOOLEAN;
  L_RESULT APEX_PLUGIN.T_AUTHORIZATION_EXEC_RESULT; -- Result object to return
  --
  -- Variables mapped to plugin
  L_LDAP_HOST      VARCHAR2(100) := P_AUTHORIZATION.ATTRIBUTE_01;
  L_LDAP_PORT      NUMBER        := P_AUTHORIZATION.ATTRIBUTE_02;
  L_GROUPNAME      VARCHAR2(30)  := P_AUTHORIZATION.ATTRIBUTE_03;
  L_USER_S_BASE    VARCHAR2(100) := P_AUTHORIZATION.ATTRIBUTE_04;
  L_USER_S_FILTER  VARCHAR2(100) := P_AUTHORIZATION.ATTRIBUTE_05;
  L_GROUP_S_BASE   VARCHAR2(100) := P_AUTHORIZATION.ATTRIBUTE_06;
  L_GROUP_S_FILTER VARCHAR2(100) := P_AUTHORIZATION.ATTRIBUTE_07;
BEGIN
  --
  -- Substitute setting user and group names in filters
  L_USER_S_FILTER  := REPLACE(L_USER_S_FILTER, '%LDAP_USER%', L_USERNAME);
  L_GROUP_S_FILTER := REPLACE(L_GROUP_S_FILTER, '%LDAP_GROUP%', L_GROUPNAME);
  --
  -- Initialize LDAP session
  L_SESSION := DBMS_LDAP.INIT(L_LDAP_HOST, L_LDAP_PORT);
  --
  -- Retrieve all attributes
  L_ATTR(1) := '*';
  --
  -- Create user handle
  L_RETVAL := DBMS_LDAP.SEARCH_S(L_SESSION, L_USER_S_BASE,
  DBMS_LDAP.SCOPE_SUBTREE, L_USER_S_FILTER, L_ATTR, 0, L_RES);
  L_USER_DN := DBMS_LDAP.GET_DN(L_SESSION, L_RES);
  L_RETVAL  := DBMS_LDAP_UTL.CREATE_USER_HANDLE(L_USER_HD,
  DBMS_LDAP_UTL.TYPE_DN, L_USER_DN);
  --
  -- Create group handle
  L_RETVAL := DBMS_LDAP.SEARCH_S(L_SESSION, L_GROUP_S_BASE,
  DBMS_LDAP.SCOPE_SUBTREE, L_GROUP_S_FILTER, L_ATTR, 0, L_RES);
  L_GROUP_DN := DBMS_LDAP.GET_DN(L_SESSION, L_RES);
  L_RETVAL   := DBMS_LDAP_UTL.CREATE_GROUP_HANDLE(L_GROUP_HD,
  DBMS_LDAP_UTL.TYPE_DN, L_GROUP_DN);
  --
  -- Check group membership
  L_RETVAL := DBMS_LDAP_UTL.CHECK_GROUP_MEMBERSHIP( L_SESSION, L_USER_HD,
  L_GROUP_HD, DBMS_LDAP_UTL.DIRECT_MEMBERSHIP );
  L_IS_MEMBER := L_RETVAL = DBMS_LDAP_UTL.SUCCESS;
  --
  -- Clean up resources
  L_RETVAL := DBMS_LDAP.MSGFREE(L_RES);
  L_RETVAL := DBMS_LDAP.UNBIND_S(L_SESSION);
  --
  -- Set and return results
  L_RESULT.IS_AUTHORIZED := L_IS_MEMBER;
  RETURN L_RESULT;
END IS_USER_IN_GROUP_FUN;